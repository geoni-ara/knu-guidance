{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\knu-guidance\\\\frontend\\\\src\\\\components\\\\board\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  changePageForBoardList\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async () => {\n    try {\n      // 서버에서 이메일과 비밀번호 일치 여부를 확인\n      const {\n        data: users\n      } = await axios.get(`http://localhost:3001/user`);\n      if (users.length > 0) {\n        const user = users.find(user => user.email === email && user.password === password);\n        if (user) {\n          const response = await axios.post('http://localhost:3001/user', {\n            email: email,\n            password: password\n          });\n          localStorage.setItem('accessToken', response.headers['authorization']);\n          localStorage.setItem('refreshToken', response.headers['refresh-token']);\n          changePageForBoardList();\n        } else {\n          alert('이메일 또는 비밀번호가 올바르지 않습니다.');\n        }\n      } else {\n        alert('이메일 또는 비밀번호가 올바르지 않습니다11.');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '10%'\n        },\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '10%'\n        },\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changePageForBoardList,\n        children: \"\\uB3CC\\uC544\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Login;\nexport const auth = axios.create({\n  baseURL: 'http://localhost:3001'\n});\nauth.interceptors.request.use(config => {\n  config.headers['authorization'] = localStorage.getItem('accessToken');\n  config.headers['refresh-token'] = localStorage.getItem('refreshToken');\n  return config;\n});\nauth.interceptors.response.use(response => {\n  if (response.headers['authorization']) {\n    localStorage.removeItem('accessToken');\n    localStorage.setItem('accessToken', response.headers['authorization']);\n  }\n  return response;\n}, error => {\n  if (error.response && error.response.data.error === 'INVALID_TOKEN') {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    alert('토큰이 만료되었습니다. 다시 로그인해주세요');\n  }\n  return Promise.reject(error);\n});\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","changePageForBoardList","_s","email","setEmail","password","setPassword","handleLogin","data","users","get","length","user","find","response","post","localStorage","setItem","headers","alert","error","console","className","children","style","display","width","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","auth","create","baseURL","interceptors","request","use","config","getItem","removeItem","Promise","reject","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/GitHub/knu-guidance/frontend/src/components/board/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Login = ({ changePageForBoardList }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      // 서버에서 이메일과 비밀번호 일치 여부를 확인\r\n      const { data: users } = await axios.get(`http://localhost:3001/user`);\r\n  \r\n      if (users.length > 0) {\r\n        const user = users.find(user => user.email === email && user.password === password);\r\n  \r\n        if (user) {\r\n          const response = await axios.post('http://localhost:3001/user', {\r\n            email: email,\r\n            password: password,\r\n          });\r\n          localStorage.setItem('accessToken', response.headers['authorization']);\r\n          localStorage.setItem('refreshToken', response.headers['refresh-token']);\r\n          changePageForBoardList();\r\n        } else {\r\n          alert('이메일 또는 비밀번호가 올바르지 않습니다.');\r\n        }\r\n      } else {\r\n        alert('이메일 또는 비밀번호가 올바르지 않습니다11.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"board-wrapper\">\r\n      <div style={{ display: 'flex' }}>\r\n        <div style={{ width: '10%' }}>Email</div>\r\n        <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <div style={{ width: '10%' }}>Password</div>\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <button onClick={handleLogin}>로그인</button>\r\n        <button onClick={changePageForBoardList}>돌아가기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const auth = axios.create({\r\n  baseURL: 'http://localhost:3001',\r\n});\r\n\r\nauth.interceptors.request.use((config) => {\r\n  config.headers['authorization'] = localStorage.getItem('accessToken');\r\n  config.headers['refresh-token'] = localStorage.getItem('refreshToken');\r\n  return config;\r\n});\r\n\r\nauth.interceptors.response.use(\r\n  (response) => {\r\n    if (response.headers['authorization']) {\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.setItem('accessToken', response.headers['authorization']);\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.data.error === 'INVALID_TOKEN') {\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      alert('토큰이 만료되었습니다. 다시 로그인해주세요');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}